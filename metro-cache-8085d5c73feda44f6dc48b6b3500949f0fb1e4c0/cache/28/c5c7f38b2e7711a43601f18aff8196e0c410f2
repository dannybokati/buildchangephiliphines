__d(function (global, _require, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });

    var _react2 = _require(_dependencyMap[0], "react");

    var _react3 = _interopRequireDefault(_react2);

    var _index = _require(_dependencyMap[1], "./../../node_modules/react-transform-hmr/lib/index.js");

    var _index2 = _interopRequireDefault(_index);

    var _jsxFileName = "/home/nishon/ReactNativeProject/buildchange-ph/src/components/PlaceholderListItem.js";

    var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

    var _reactNative = _require(_dependencyMap[2], "react-native");

    var _reactRedux = _require(_dependencyMap[3], "react-redux");

    var _reactNativeRouterFlux = _require(_dependencyMap[4], "react-native-router-flux");

    var _actions = _require(_dependencyMap[5], "../actions");

    var _common = _require(_dependencyMap[6], "./common");

    function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

    function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

    function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

    function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

    var _components = {
        PlaceholderListItem: {
            displayName: "PlaceholderListItem"
        }
    };

    var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
        filename: "/home/nishon/ReactNativeProject/buildchange-ph/src/components/PlaceholderListItem.js",
        components: _components,
        locals: [module],
        imports: [_react3.default]
    });

    function _wrapComponent(id) {
        return function (Component) {
            return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
        };
    }

    var PlaceholderListItem = _wrapComponent("PlaceholderListItem")(function (_Component) {
        _inherits(PlaceholderListItem, _Component);

        function PlaceholderListItem() {
            _classCallCheck(this, PlaceholderListItem);

            return _possibleConstructorReturn(this, (PlaceholderListItem.__proto__ || Object.getPrototypeOf(PlaceholderListItem)).apply(this, arguments));
        }

        _createClass(PlaceholderListItem, [{
            key: "onSiteTapped",
            value: function onSiteTapped() {
                console.log('on_site_tapped');
                console.log(this.props.rowData);
                var dispatch = this.props.dispatch;
                dispatch((0, _actions.storeCurrentSelectedSchool)({
                    schoolId: this.props.rowData.id
                }));

                _reactNativeRouterFlux.Actions.jump('tabbar', this.props.rowData);
            }
        }, {
            key: "render",
            value: function render() {
                console.log('renderbhitra');
                console.log(this.props.rowData.name);
                var titleStyle = styles.titleStyle,
                    subtitleStyle = styles.subtitleStyle,
                    cointainerStyle = styles.cointainerStyle;
                var name = this.props.rowData.name;
                var firstLetter = name.charAt(0);
                return _react3.default.createElement(
                    _reactNative.TouchableOpacity,
                    {
                        onPress: this.onSiteTapped.bind(this),
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 30
                        }
                    },
                    _react3.default.createElement(
                        _common.CardSection,
                        {
                            __source: {
                                fileName: _jsxFileName,
                                lineNumber: 33
                            }
                        },
                        _react3.default.createElement(_common.Circle, {
                            text: firstLetter,
                            color: "green",
                            __source: {
                                fileName: _jsxFileName,
                                lineNumber: 34
                            }
                        }),
                        _react3.default.createElement(
                            _reactNative.View,
                            {
                                style: cointainerStyle,
                                __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 35
                                }
                            },
                            _react3.default.createElement(
                                _reactNative.Text,
                                {
                                    numberOfLines: 2,
                                    style: titleStyle,
                                    __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 36
                                    }
                                },
                                name
                            ),
                            _react3.default.createElement(
                                _reactNative.Text,
                                {
                                    style: subtitleStyle,
                                    __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 38
                                    }
                                },
                                "Contains ",
                                this.props.rowData.site_steps.length,
                                " steps "
                            )
                        )
                    )
                );
            }
        }]);

        return PlaceholderListItem;
    }(_react2.Component));

    var styles = {
        titleStyle: {
            paddingLeft: 16,
            fontSize: 17,
            fontWeight: 'bold',
            color: '#000'
        },
        subtitleStyle: {
            paddingLeft: 16,
            fontSize: 15,
            color: '#908989'
        },
        cointainerStyle: {
            marginTop: 16,
            marginBottom: 16,
            justifyContent: 'center',
            borderBottomWidth: 0,
            backgroundColor: '#fff',
            flexDirection: 'column',
            position: 'relative'
        }
    };
    exports.default = (0, _reactRedux.connect)(null)(PlaceholderListItem);
});