__d(function (global, _require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.Input = undefined;
  var _jsxFileName = "/home/nishon/ReactNativeProject/buildchange-ph/src/components/common/Input.js";

  var _react = _require(_dependencyMap[0], "react");

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = _require(_dependencyMap[1], "react-native");

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  var Input = function Input(_ref) {
    var label = _ref.label,
        value = _ref.value,
        onChangeText = _ref.onChangeText,
        placeholder = _ref.placeholder,
        secureTextEntry = _ref.secureTextEntry;
    var inputStyle = styles.inputStyle,
        labelStyle = styles.labelStyle,
        containestyle = styles.containestyle;
    return _react2.default.createElement(
      _reactNative.View,
      {
        style: containestyle,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 9
        }
      },
      _react2.default.createElement(
        _reactNative.Text,
        {
          style: labelStyle,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 10
          }
        },
        label
      ),
      _react2.default.createElement(_reactNative.TextInput, {
        secureTextEntry: secureTextEntry,
        placeholder: placeholder,
        autoCorrect: false,
        style: inputStyle,
        value: value,
        onChangeText: onChangeText,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 13
        }
      })
    );
  };

  var styles = {
    inputStyle: {
      paddingRight: 5,
      paddingLeft: 5,
      color: '#000',
      fontSize: 16,
      lineHeight: 21,
      flex: 2
    },
    labelStyle: {
      flex: 1,
      fontSize: 16,
      paddingLeft: 16
    },
    containestyle: {
      height: 40,
      flex: 1,
      flexDirection: 'row',
      alignItems: 'center'
    }
  };
  exports.Input = Input;
});