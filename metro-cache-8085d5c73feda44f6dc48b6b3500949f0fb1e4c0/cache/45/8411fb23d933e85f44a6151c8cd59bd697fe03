__d(function (global, _require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = makeHttpRequest;

  function makeHttpRequest() {
    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
        _ref$method = _ref.method,
        method = _ref$method === undefined ? 'get' : _ref$method,
        url = _ref.url,
        params = _ref.params,
        _ref$headers = _ref.headers,
        headers = _ref$headers === undefined ? {} : _ref$headers,
        _ref$timeout = _ref.timeout,
        timeout = _ref$timeout === undefined ? 10000 : _ref$timeout;

    return new Promise(function (resolve, reject) {
      var xhr = new XMLHttpRequest();
      var tOut = setTimeout(function () {
        xhr.abort();
        reject('timeout');
      }, timeout);
      xhr.open(method, url);

      xhr.onload = function onLoad() {
        if (this.status >= 200 && this.status < 300) {
          clearTimeout(tOut);
          resolve(xhr.response);
        } else {
          clearTimeout(tOut);
          reject({
            status: this.status,
            statusText: xhr.statusText
          });
        }
      };

      xhr.onerror = function onError() {
        clearTimeout(tOut);
        reject({
          status: this.status,
          statusText: xhr.statusText
        });
      };

      if (headers) {
        Object.keys(headers).forEach(function (key) {
          xhr.setRequestHeader(key, headers[key]);
        });
      }

      var requestParams = params;

      if (requestParams && typeof requestParams === 'object') {
        requestParams = Object.keys(requestParams).map(function (key) {
          return encodeURIComponent(key) + "=" + encodeURIComponent(requestParams[key]);
        }).join('&');
      }

      xhr.send(params);
    });
  }
});