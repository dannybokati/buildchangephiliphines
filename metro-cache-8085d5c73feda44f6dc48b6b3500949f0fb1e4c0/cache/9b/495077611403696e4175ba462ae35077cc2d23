__d(function (global, _require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react2 = _require(_dependencyMap[0], "react");

  var _react3 = _interopRequireDefault(_react2);

  var _index = _require(_dependencyMap[1], "./../../../node_modules/react-transform-hmr/lib/index.js");

  var _index2 = _interopRequireDefault(_index);

  var _jsxFileName = "/home/nishon/ReactNativeProject/buildchange-ph/src/components/scenes/InternetStatus.js";

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _reactNative = _require(_dependencyMap[2], "react-native");

  var _reactNativeOffline = _require(_dependencyMap[3], "react-native-offline");

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  var _components = {
    InternetStatus: {
      displayName: "InternetStatus"
    }
  };

  var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
    filename: "/home/nishon/ReactNativeProject/buildchange-ph/src/components/scenes/InternetStatus.js",
    components: _components,
    locals: [module],
    imports: [_react3.default]
  });

  function _wrapComponent(id) {
    return function (Component) {
      return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
    };
  }

  var InternetStatus = _wrapComponent("InternetStatus")(function (_Component) {
    _inherits(InternetStatus, _Component);

    function InternetStatus() {
      _classCallCheck(this, InternetStatus);

      console.log('constructor_bhitra');

      var _this = _possibleConstructorReturn(this, (InternetStatus.__proto__ || Object.getPrototypeOf(InternetStatus)).call(this));

      _this.state = {
        internetAvailable: true
      };
      return _this;
    }

    _createClass(InternetStatus, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        console.log('component_did_mount_ko_bhitra');
        (0, _reactNativeOffline.checkInternetConnection)().then(function (res) {
          console.log(res);

          _reactNative.NetInfo.isConnected.fetch().then(function (isConnected) {
            console.log('First, is ' + (isConnected ? 'online' : 'offline'));

            _reactNative.Alert.alert(isConnected ? 'online' : 'offline');

            if (!isConnected) {
              _this2.setState({
                internetAvailable: false
              });
            }
          });
        });
      }
    }, {
      key: "render",
      value: function render() {
        console.log('render bhitra');

        if (this.state.internetAvailable) {
          return _react3.default.createElement(
            _reactNative.Text,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 34
              }
            },
            " Working Internet Connection!"
          );
        }

        return _react3.default.createElement(
          _reactNative.Text,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 36
            }
          },
          "Something went wrong! Check your internet connection! Reload!"
        );
      }
    }]);

    return InternetStatus;
  }(_react2.Component));

  exports.default = InternetStatus;
});