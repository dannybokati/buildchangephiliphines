__d(function (global, _require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react2 = _require(_dependencyMap[0], "react");

  var _react3 = _interopRequireDefault(_react2);

  var _index = _require(_dependencyMap[1], "./../../node_modules/react-transform-hmr/lib/index.js");

  var _index2 = _interopRequireDefault(_index);

  var _jsxFileName = "/home/nishon/ReactNativeProject/buildchange-ph/src/components/CheckListItem.js";

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _reactNative = _require(_dependencyMap[2], "react-native");

  var _reactNativeElements = _require(_dependencyMap[3], "react-native-elements");

  var _reactRedux = _require(_dependencyMap[4], "react-redux");

  var _reactNativeRouterFlux = _require(_dependencyMap[5], "react-native-router-flux");

  var _lodash = _require(_dependencyMap[6], "lodash");

  var _lodash2 = _interopRequireDefault(_lodash);

  var _strings = _require(_dependencyMap[7], "../../locales/strings");

  var _actions = _require(_dependencyMap[8], "../actions");

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  var _components = {
    CheckListItem: {
      displayName: "CheckListItem"
    }
  };

  var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
    filename: "/home/nishon/ReactNativeProject/buildchange-ph/src/components/CheckListItem.js",
    components: _components,
    locals: [module],
    imports: [_react3.default]
  });

  function _wrapComponent(id) {
    return function (Component) {
      return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
    };
  }

  var CheckListItem = _wrapComponent("CheckListItem")(function (_Component) {
    _inherits(CheckListItem, _Component);

    function CheckListItem() {
      _classCallCheck(this, CheckListItem);

      console.log('constructor');

      var _this = _possibleConstructorReturn(this, (CheckListItem.__proto__ || Object.getPrototypeOf(CheckListItem)).call(this));

      _this.state = {
        checked: false
      };
      return _this;
    }

    _createClass(CheckListItem, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        if (!_lodash2.default.isEmpty(this.props.data.last_submission)) {
          this.setState({
            checked: this.props.data.last_submission.report_status
          });
        }
      }
    }, {
      key: "showConditionalJSX",
      value: function showConditionalJSX() {
        var _this2 = this;

        console.log('showConditionalJSXko_bhitra');
        console.log(this.props);
        var name = (0, _strings.getLocalizedText)(this.props.data.localtext, this.props.data.text);

        if (this.props.currentUserGroup === 'Field Engineer') {
          return _react3.default.createElement(_reactNativeElements.CheckBox, {
            title: name,
            checkedIcon: "check-square-o",
            uncheckedIcon: "square-o",
            uncheckedColor: "red",
            onPress: function onPress() {
              _this2.props.dispatch((0, _actions.requestPerson)({
                checklistItemData: _this2.props.data,
                checklistItemValue: !_this2.state.checked,
                userId: _this2.props.currentUserId
              }));

              _this2.setState({
                checked: !_this2.state.checked
              });
            },
            checked: this.state.checked,
            containerStyle: {
              padding: 20,
              margin: 0,
              marginRight: 0,
              marginLeft: 0,
              backgroundColor: 'white'
            },
            textStyle: {
              fontSize: 16
            },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 132
            }
          });
        }

        return _react3.default.createElement(
          _reactNative.Text,
          {
            style: {
              padding: 20,
              margin: 0,
              marginRight: 0,
              marginLeft: 0,
              backgroundColor: 'white',
              fontSize: 16,
              textAlign: 'center'
            },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 148
            }
          },
          name
        );
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        console.log('render_bhitra');
        console.log('render_bhitra_last_submissionko_value');
        console.log(this.props.data.last_submission);
        console.log(this.state.checked);
        return _react3.default.createElement(
          _reactNative.View,
          {
            style: styles.container,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 159
            }
          },
          this.showConditionalJSX(),
          _react3.default.createElement(
            _reactNative.TouchableOpacity,
            {
              onPress: function onPress() {
                return _reactNativeRouterFlux.Actions.ReportForm(_this3.props.data);
              },
              style: {
                backgroundColor: '#FAFAFA',
                height: 40,
                borderWidth: 0,
                alignItems: 'center',
                justifyContent: 'center'
              },
              __source: {
                fileName: _jsxFileName,
                lineNumber: 164
              }
            },
            _react3.default.createElement(
              _reactNative.Text,
              {
                style: {
                  textAlign: 'center',
                  fontSize: 16,
                  fontWeight: 'bold'
                },
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 168
                }
              },
              "Report"
            )
          )
        );
      }
    }]);

    return CheckListItem;
  }(_react2.Component));

  var mapStateToProps = function mapStateToProps(state) {
    console.log('CHECKLISTKO_mapStateToPropsko_bhitra');
    console.log(state);
    return {
      currentUserGroup: state.currentUserGroup.currentUserGroup,
      currentUserId: state.currentUserGroup.currentUserId
    };
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      margin: 10,
      flexDirection: 'column',
      flex: 1,
      borderWidth: 1,
      borderColor: 'rgba(0,0,0,0.2)'
    }
  });

  exports.default = (0, _reactRedux.connect)(mapStateToProps)(CheckListItem);
});