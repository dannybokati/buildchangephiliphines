__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  exports.__esModule = true;
  exports.throttleHelper = exports.takeLatestHelper = exports.takeEveryHelper = exports.throttle = exports.takeLatest = exports.takeEvery = undefined;

  var _takeEvery = _require(_dependencyMap[0], './takeEvery');

  var _takeEvery2 = _interopRequireDefault(_takeEvery);

  var _takeLatest = _require(_dependencyMap[1], './takeLatest');

  var _takeLatest2 = _interopRequireDefault(_takeLatest);

  var _throttle = _require(_dependencyMap[2], './throttle');

  var _throttle2 = _interopRequireDefault(_throttle);

  var _utils = _require(_dependencyMap[3], '../utils');

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  var deprecationWarning = function deprecationWarning(helperName) {
    return 'import { ' + helperName + ' } from \'redux-saga\' has been deprecated in favor of import { ' + helperName + ' } from \'redux-saga/effects\'.\nThe latter will not work with yield*, as helper effects are wrapped automatically for you in fork effect.\nTherefore yield ' + helperName + ' will return task descriptor to your saga and execute next lines of code.';
  };

  var takeEvery = (0, _utils.deprecate)(_takeEvery2.default, deprecationWarning('takeEvery'));
  var takeLatest = (0, _utils.deprecate)(_takeLatest2.default, deprecationWarning('takeLatest'));
  var throttle = (0, _utils.deprecate)(_throttle2.default, deprecationWarning('throttle'));
  exports.takeEvery = takeEvery;
  exports.takeLatest = takeLatest;
  exports.throttle = throttle;
  exports.takeEveryHelper = _takeEvery2.default;
  exports.takeLatestHelper = _takeLatest2.default;
  exports.throttleHelper = _throttle2.default;
});