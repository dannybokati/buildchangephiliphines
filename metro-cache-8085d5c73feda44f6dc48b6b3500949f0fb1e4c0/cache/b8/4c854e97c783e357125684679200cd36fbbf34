__d(function (global, _require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react2 = _require(_dependencyMap[0], "react");

  var _react3 = _interopRequireDefault(_react2);

  var _index = _require(_dependencyMap[1], "./../../node_modules/react-transform-hmr/lib/index.js");

  var _index2 = _interopRequireDefault(_index);

  var _jsxFileName = "/home/nishon/ReactNativeProject/buildchange-ph/src/components/PrimaryPhoto.js";

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _reactNative = _require(_dependencyMap[2], "react-native");

  var _reactNativeFetchBlob = _require(_dependencyMap[3], "react-native-fetch-blob");

  var _reactNativeFetchBlob2 = _interopRequireDefault(_reactNativeFetchBlob);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  var _components = {
    PrimaryPhoto: {
      displayName: "PrimaryPhoto"
    }
  };

  var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
    filename: "/home/nishon/ReactNativeProject/buildchange-ph/src/components/PrimaryPhoto.js",
    components: _components,
    locals: [module],
    imports: [_react3.default]
  });

  function _wrapComponent(id) {
    return function (Component) {
      return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
    };
  }

  var PrimaryPhoto = _wrapComponent("PrimaryPhoto")(function (_Component) {
    _inherits(PrimaryPhoto, _Component);

    function PrimaryPhoto() {
      _classCallCheck(this, PrimaryPhoto);

      var _this = _possibleConstructorReturn(this, (PrimaryPhoto.__proto__ || Object.getPrototypeOf(PrimaryPhoto)).call(this));

      _this.state = {
        primary_photo: {}
      };
      return _this;
    }

    _createClass(PrimaryPhoto, [{
      key: "componentWillMount",
      value: function componentWillMount() {
        var _this2 = this;

        _reactNativeFetchBlob2.default.fs.exists('/storage/emulated/0/Android/data/com.guide/build_change_philippines').then(function (exist) {
          console.log(exist);

          if (exist) {
            _this2.setState({
              primary_photo: {
                uri: 'file:///storage/emulated/0/Android/data/com.guide/build_change_philippines/' + _this2.props.primaryPhoto.image
              }
            });
          } else if (!exist) {
            if (_this2.props.substep.primary_photo === null) {
              _this2.setState({
                primary_photo: _require(_dependencyMap[4], '../../app_images/no_image.png')
              });
            } else if (_this2.props.substep.primary_photo !== null) {
              _this2.setState({
                primary_photo: _require(_dependencyMap[4], '../../app_images/no_image.png')
              });
            }
          }
        }).catch(function () {
          console.log('error while checking file');
        });
      }
    }, {
      key: "render",
      value: function render() {
        return _react3.default.createElement(
          _reactNative.View,
          {
            style: styles.imageContainer,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 46
            }
          },
          _react3.default.createElement(_reactNative.Image, {
            resizeMode: 'contain',
            style: styles.image,
            source: this.state.primary_photo,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 47
            }
          })
        );
      }
    }]);

    return PrimaryPhoto;
  }(_react2.Component));

  exports.default = PrimaryPhoto;

  var styles = _reactNative.StyleSheet.create({
    imageContainer: {
      backgroundColor: 'white',
      alignItems: 'center',
      paddingBottom: 8
    },
    image: {
      width: _reactNative.Dimensions.get('window').width - 16,
      height: 240,
      borderRadius: 10
    }
  });
});