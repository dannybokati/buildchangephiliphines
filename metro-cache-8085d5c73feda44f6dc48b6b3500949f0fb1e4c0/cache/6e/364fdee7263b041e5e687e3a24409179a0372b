__d(function (global, _require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react2 = _require(_dependencyMap[0], "react");

  var _react3 = _interopRequireDefault(_react2);

  var _index = _require(_dependencyMap[1], "./../node_modules/react-transform-hmr/lib/index.js");

  var _index2 = _interopRequireDefault(_index);

  var _jsxFileName = "/home/nishon/ReactNativeProject/buildchange-ph/src/signuptest.js";

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _reactNativeRouterFlux = _require(_dependencyMap[2], "react-native-router-flux");

  var _reactNative = _require(_dependencyMap[3], "react-native");

  var _stylestest = _require(_dependencyMap[4], "./stylestest");

  var _stylestest2 = _interopRequireDefault(_stylestest);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  var _components = {
    SignUpTest: {
      displayName: "SignUpTest"
    }
  };

  var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
    filename: "/home/nishon/ReactNativeProject/buildchange-ph/src/signuptest.js",
    components: _components,
    locals: [module],
    imports: [_react3.default]
  });

  function _wrapComponent(id) {
    return function (Component) {
      return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
    };
  }

  var SignUpTest = _wrapComponent("SignUpTest")(function (_Component) {
    _inherits(SignUpTest, _Component);

    function SignUpTest() {
      _classCallCheck(this, SignUpTest);

      var _this = _possibleConstructorReturn(this, (SignUpTest.__proto__ || Object.getPrototypeOf(SignUpTest)).call(this));

      _this.keyboardDidShow = function (event) {
        console.log('keyboardDidShow');
        console.log(event);

        _reactNative.Animated.parallel([_reactNative.Animated.timing(_this.keyboardHeight, {
          duration: 1000,
          toValue: event.endCoordinates.height
        }), _reactNative.Animated.timing(_this.imageHeight, {
          duration: 300,
          toValue: _stylestest.IMAGE_HEIGHT_SMALL
        })]).start();
      };

      _this.keyboardDidHide = function (event) {
        console.log('keyboardDidHide');
        console.log(event);

        _reactNative.Animated.parallel([_reactNative.Animated.timing(_this.keyboardHeight, {
          duration: 1000,
          toValue: 0
        }), _reactNative.Animated.timing(_this.imageHeight, {
          duration: 300,
          toValue: _stylestest.IMAGE_HEIGHT
        })]).start();
      };

      _this.state = {
        username: null,
        email: null,
        password: null,
        repassword: null
      };
      _this.keyboardHeight = new _reactNative.Animated.Value(0);
      _this.imageHeight = new _reactNative.Animated.Value(_stylestest.IMAGE_HEIGHT);
      return _this;
    }

    _createClass(SignUpTest, [{
      key: "componentWillMount",
      value: function componentWillMount() {
        this.keyboardDidShowSub = _reactNative.Keyboard.addListener('keyboardDidShow', this.keyboardDidShow);
        this.keyboardDidHideSub = _reactNative.Keyboard.addListener('keyboardDidHide', this.keyboardDidHide);
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.keyboardDidShowSub.remove();
        this.keyboardDidHideSub.remove();
      }
    }, {
      key: "userSignup",
      value: function userSignup() {
        if (this.state.password === this.state.repassword) {
          if (this.state.username && this.state.email && this.state.password) {
            fetch('http://bccms.naxa.com.np/core/api/users/', {
              method: 'POST',
              headers: {
                Accept: 'application/json',
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({
                username: this.state.username,
                email: this.state.email,
                password: this.state.password
              })
            }).then(function (response) {
              switch (response.status) {
                case 201:
                  _reactNative.Alert.alert('Successful Signup');

                  _reactNativeRouterFlux.Actions.Login();

                  break;

                case 400:
                  _reactNative.Alert.alert('Username Already Exists');

                  break;

                default:
                  _reactNative.Alert.alert('Unknown Error Occured!');

              }
            }).catch(function (error) {
              return console.log(error);
            }).done();
          }
        } else {
          _reactNative.Alert.alert('Password did not match!');
        }
      }
    }, {
      key: "render",
      value: function render() {
        return _react3.default.createElement(
          _reactNative.Animated.View,
          {
            style: [_stylestest2.default.container, {
              paddingBottom: 50
            }],
            __source: {
              fileName: _jsxFileName,
              lineNumber: 110
            }
          },
          _react3.default.createElement(_reactNative.Animated.Image, {
            source: _require(_dependencyMap[5], '../app_images/buildchange.jpeg'),
            style: [_stylestest2.default.logo, {
              height: this.imageHeight
            }],
            __source: {
              fileName: _jsxFileName,
              lineNumber: 111
            }
          }),
          _react3.default.createElement(_reactNative.TextInput, {
            placeholder: "Email",
            style: _stylestest2.default.input,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 112
            }
          }),
          _react3.default.createElement(_reactNative.TextInput, {
            placeholder: "Username",
            style: _stylestest2.default.input,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 116
            }
          }),
          _react3.default.createElement(_reactNative.TextInput, {
            placeholder: "Password",
            style: _stylestest2.default.input,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 120
            }
          }),
          _react3.default.createElement(_reactNative.TextInput, {
            placeholder: "Confirm Password",
            style: _stylestest2.default.input,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 124
            }
          })
        );
      }
    }]);

    return SignUpTest;
  }(_react2.Component));

  exports.default = SignUpTest;
});