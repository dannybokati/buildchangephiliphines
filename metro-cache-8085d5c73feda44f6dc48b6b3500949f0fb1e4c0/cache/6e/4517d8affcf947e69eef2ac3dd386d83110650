__d(function (global, _require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react2 = _require(_dependencyMap[0], "react");

  var _react3 = _interopRequireDefault(_react2);

  var _index = _require(_dependencyMap[1], "./../../node_modules/react-transform-hmr/lib/index.js");

  var _index2 = _interopRequireDefault(_index);

  var _jsxFileName = "/home/nishon/ReactNativeProject/buildchange-ph/src/test/page1.js";

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _reactNative = _require(_dependencyMap[2], "react-native");

  var _reactNativeRouterFlux = _require(_dependencyMap[3], "react-native-router-flux");

  var _FontAwesome = _require(_dependencyMap[4], "react-native-vector-icons/FontAwesome");

  var _FontAwesome2 = _interopRequireDefault(_FontAwesome);

  var _PrimaryPhoto = _require(_dependencyMap[5], "../components/PrimaryPhoto");

  var _PrimaryPhoto2 = _interopRequireDefault(_PrimaryPhoto);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  var _components = {
    Page1: {
      displayName: "Page1"
    }
  };

  var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
    filename: "/home/nishon/ReactNativeProject/buildchange-ph/src/test/page1.js",
    components: _components,
    locals: [module],
    imports: [_react3.default]
  });

  function _wrapComponent(id) {
    return function (Component) {
      return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
    };
  }

  var Page1 = _wrapComponent("Page1")(function (_Component) {
    _inherits(Page1, _Component);

    function Page1() {
      _classCallCheck(this, Page1);

      return _possibleConstructorReturn(this, (Page1.__proto__ || Object.getPrototypeOf(Page1)).apply(this, arguments));
    }

    _createClass(Page1, [{
      key: "onGoodPhotoTapped",
      value: function onGoodPhotoTapped() {
        _reactNativeRouterFlux.Actions.ComparePhotosScene({
          title: this.props.substep.title,
          substep: this.props.substep
        });
      }
    }, {
      key: "onBadPhotoTapped",
      value: function onBadPhotoTapped() {
        _reactNativeRouterFlux.Actions.BadPhoto({
          title: this.props.substep.title,
          substep: this.props.substep
        });
      }
    }, {
      key: "onReportTapped",
      value: function onReportTapped() {
        _reactNativeRouterFlux.Actions.ReportForm({
          substep: this.props.substep
        });
      }
    }, {
      key: "onCallInspectorTapped",
      value: function onCallInspectorTapped() {
        _reactNativeRouterFlux.Actions.EngineerList();
      }
    }, {
      key: "render",
      value: function render() {
        var ds = new _reactNative.ListView.DataSource({
          rowHasChanged: function rowHasChanged(r1, r2) {
            return r1 !== r2;
          }
        });
        return _react3.default.createElement(
          _reactNative.View,
          {
            style: styles.container,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 35
            }
          },
          _react3.default.createElement(
            _reactNative.View,
            {
              style: styles.titleContainer,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 37
              }
            },
            _react3.default.createElement(
              _reactNative.Text,
              {
                style: styles.titleText,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 38
                }
              },
              this.props.substep.title
            )
          ),
          _react3.default.createElement(_reactNative.ListView, {
            dataSource: ds.cloneWithRows(this.props.substep.primary_photos),
            renderRow: function renderRow(rowData) {
              return _react3.default.createElement(_PrimaryPhoto2.default, {
                primaryPhoto: rowData,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 43
                }
              });
            },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 41
            }
          }),
          _react3.default.createElement(
            _reactNative.View,
            {
              style: [styles.buttonContainer, styles.buttonContainerGoodPhotoBadPhoto],
              __source: {
                fileName: _jsxFileName,
                lineNumber: 47
              }
            },
            this.props.substep.good_photo && _react3.default.createElement(
              _reactNative.TouchableOpacity,
              {
                onPress: this.onGoodPhotoTapped.bind(this),
                style: {
                  flex: 1,
                  flexDirection: 'row',
                  justifyContent: 'center',
                  alignItems: 'center',
                  backgroundColor: '#8dc540',
                  paddingTop: 8,
                  paddingBottom: 8,
                  marginRight: 4,
                  borderRadius: 5
                },
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 50
                }
              },
              _react3.default.createElement(_FontAwesome2.default, {
                name: 'check',
                size: 35,
                style: styles.iconStyle,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 51
                }
              }),
              _react3.default.createElement(
                _reactNative.Text,
                {
                  style: styles.buttonText,
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 52
                  }
                },
                "Good Photo"
              )
            ),
            this.props.substep.bad_photo && _react3.default.createElement(
              _reactNative.TouchableOpacity,
              {
                onPress: this.onBadPhotoTapped.bind(this),
                style: this.props.substep.call_inspector ? {
                  flex: 1,
                  flexDirection: 'row',
                  justifyContent: 'center',
                  alignItems: 'center',
                  backgroundColor: 'red',
                  paddingTop: 8,
                  paddingBottom: 8,
                  marginLeft: 4,
                  borderRadius: 5
                } : {
                  flex: 1,
                  flexDirection: 'row',
                  justifyContent: 'center',
                  alignItems: 'center',
                  backgroundColor: 'red',
                  paddingTop: 8,
                  paddingBottom: 8,
                  borderRadius: 5
                },
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 57
                }
              },
              _react3.default.createElement(_FontAwesome2.default, {
                name: 'close',
                size: 35,
                style: styles.iconStyle,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 58
                }
              }),
              _react3.default.createElement(
                _reactNative.Text,
                {
                  style: styles.buttonText,
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 59
                  }
                },
                "Bad Photo"
              )
            )
          ),
          _react3.default.createElement(
            _reactNative.View,
            {
              style: [styles.buttonContainer, styles.buttonContainerCallInspectorReport],
              __source: {
                fileName: _jsxFileName,
                lineNumber: 65
              }
            },
            this.props.substep.call_inspector && _react3.default.createElement(
              _reactNative.TouchableOpacity,
              {
                onPress: this.onCallInspectorTapped.bind(this),
                style: {
                  flex: 1,
                  flexDirection: 'row',
                  justifyContent: 'center',
                  alignItems: 'center',
                  backgroundColor: '#4f82ad',
                  paddingTop: 8,
                  paddingBottom: 8,
                  marginRight: 4,
                  borderRadius: 5
                },
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 68
                }
              },
              _react3.default.createElement(_FontAwesome2.default, {
                name: 'phone-square',
                size: 35,
                style: styles.iconStyle,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 69
                }
              }),
              _react3.default.createElement(
                _reactNative.Text,
                {
                  style: styles.buttonText,
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 70
                  }
                },
                "Call Inspector"
              )
            ),
            _react3.default.createElement(
              _reactNative.TouchableOpacity,
              {
                onPress: this.onReportTapped.bind(this),
                style: this.props.substep.call_inspector ? {
                  flex: 1,
                  flexDirection: 'row',
                  justifyContent: 'center',
                  alignItems: 'center',
                  backgroundColor: '#4f82ad',
                  paddingTop: 8,
                  paddingBottom: 8,
                  marginLeft: 4,
                  borderRadius: 5
                } : {
                  flex: 1,
                  flexDirection: 'row',
                  justifyContent: 'center',
                  alignItems: 'center',
                  backgroundColor: '#4f82ad',
                  paddingTop: 8,
                  paddingBottom: 8,
                  borderRadius: 5
                },
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 74
                }
              },
              _react3.default.createElement(_FontAwesome2.default, {
                name: 'newspaper-o',
                size: 35,
                style: styles.iconStyle,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 75
                }
              }),
              _react3.default.createElement(
                _reactNative.Text,
                {
                  style: styles.buttonText,
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 76
                  }
                },
                "Report"
              )
            )
          )
        );
      }
    }]);

    return Page1;
  }(_react2.Component));

  exports.default = Page1;

  var styles = _reactNative.StyleSheet.create({
    container: {
      backgroundColor: 'white',
      marginTop: 12
    },
    titleContainer: {
      backgroundColor: 'white',
      justifyContent: 'center',
      alignItems: 'center',
      paddingTop: 5,
      paddingBottom: 5
    },
    titleText: {
      fontSize: 20,
      fontWeight: 'bold',
      paddingLeft: 8,
      color: 'black',
      textAlign: 'center'
    },
    imageContainer: {
      backgroundColor: 'white',
      alignItems: 'center',
      paddingBottom: 8
    },
    image: {
      width: _reactNative.Dimensions.get('window').width - 16,
      height: 240,
      borderRadius: 5
    },
    buttonContainer: {
      flexDirection: 'row',
      paddingLeft: 8,
      paddingRight: 8,
      backgroundColor: 'white',
      paddingBottom: 8
    },
    buttonContainerGoodPhotoBadPhoto: {},
    buttonContainerCallInspectorReport: {
      paddingBottom: 8
    },
    iconStyle: {
      color: 'white'
    },
    buttonText: {
      paddingLeft: 5,
      fontWeight: 'bold',
      color: 'white',
      fontSize: 16
    }
  });
});