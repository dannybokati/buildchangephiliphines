__d(function (global, _require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react2 = _require(_dependencyMap[0], "react");

  var _react3 = _interopRequireDefault(_react2);

  var _index = _require(_dependencyMap[1], "./node_modules/react-transform-hmr/lib/index.js");

  var _index2 = _interopRequireDefault(_index);

  var _jsxFileName = "/home/nishon/ReactNativeProject/buildchange-ph/Select.js";

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _reactNative = _require(_dependencyMap[2], "react-native");

  var _reactNativeZipArchive = _require(_dependencyMap[3], "react-native-zip-archive");

  var _reactNativeFetchBlob = _require(_dependencyMap[4], "react-native-fetch-blob");

  var _reactNativeFetchBlob2 = _interopRequireDefault(_reactNativeFetchBlob);

  var _reactNativeLinearGradient = _require(_dependencyMap[5], "react-native-linear-gradient");

  var _reactNativeLinearGradient2 = _interopRequireDefault(_reactNativeLinearGradient);

  var _reactNativeRouterFlux = _require(_dependencyMap[6], "react-native-router-flux");

  var _strings = _require(_dependencyMap[7], "./locales/strings");

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  var _components = {
    Select: {
      displayName: "Select"
    }
  };

  var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
    filename: "/home/nishon/ReactNativeProject/buildchange-ph/Select.js",
    components: _components,
    locals: [module],
    imports: [_react3.default]
  });

  function _wrapComponent(id) {
    return function (Component) {
      return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
    };
  }

  var Select = _wrapComponent("Select")(function (_Component) {
    _inherits(Select, _Component);

    function Select() {
      var _ref;

      var _temp, _this, _ret;

      _classCallCheck(this, Select);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Select.__proto__ || Object.getPrototypeOf(Select)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
        isLoadingLocale: true
      }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(Select, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        console.log('component_did_mount_bhitra');
        console.log('react_native_fetch_blob_bhitra');
        console.log(_reactNativeFetchBlob2.default.fs.dirs);

        _reactNativeFetchBlob2.default.fs.exists('/storage/emulated/0/Android/data/com.guide/build_change_philippines').then(function (exist) {
          if (!exist) {
            _reactNativeFetchBlob2.default.config({
              addAndroidDownloads: {
                useDownloadManager: true,
                path: _reactNativeFetchBlob2.default.fs.dirs.SDCardApplicationDir + '/build_change_philippines.zip',
                description: 'Images Zip',
                mediaScannable: true
              }
            }).fetch('GET', 'http://bccms.naxa.com.np/core/project-material-photos/1').then(function (resp) {
              var sourcePath = resp.path();
              var targetPath = resp.path().replace('.zip', '');
              (0, _reactNativeZipArchive.unzip)(sourcePath, targetPath).then(function (path) {
                console.log("unzip completed at " + path);
              }).catch(function (error) {
                console.log(error);
              });
            });
          }
        }).catch(function () {
          console.log('error while checking file');
        });

        this.getLocale();
      }
    }, {
      key: "getLocale",
      value: function getLocale() {
        var _this2 = this;

        return regeneratorRuntime.async(function getLocale$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return regeneratorRuntime.awrap(_reactNative.AsyncStorage.getItem('locale').then(function (value) {
                  _strings.strings.setLanguage(value);

                  _this2.setState({
                    isLoading: false
                  });
                }));

              case 2:
                return _context.abrupt("return", _context.sent);

              case 3:
              case "end":
                return _context.stop();
            }
          }
        }, null, this);
      }
    }, {
      key: "render",
      value: function render() {
        var _Dimensions$get = _reactNative.Dimensions.get('window'),
            height = _Dimensions$get.height,
            width = _Dimensions$get.width;

        return _react3.default.createElement(
          _reactNative.View,
          {
            style: {
              position: 'relative',
              overflow: 'hidden'
            },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 72
            }
          },
          _react3.default.createElement(_reactNative.View, {
            style: {
              height: 30,
              position: 'absolute',
              left: -5,
              right: -5,
              top: height / 2 - 15,
              backgroundColor: '#FFF',
              zIndex: 10,
              transform: [{
                rotate: '4deg'
              }]
            },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 73
            }
          }),
          _react3.default.createElement(
            _reactNative.TouchableOpacity,
            {
              onPress: function onPress() {
                return _reactNativeRouterFlux.Actions.Successful_Login();
              },
              activeOpacity: 0.6,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 74
              }
            },
            _react3.default.createElement(
              _reactNative.View,
              {
                style: {
                  position: 'relative',
                  height: height / 2,
                  width: width
                },
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 75
                }
              },
              _react3.default.createElement(_reactNative.View, {
                style: {
                  position: 'absolute',
                  zIndex: 9,
                  left: 0,
                  right: 0,
                  top: 0,
                  bottom: 0,
                  backgroundColor: '#00A2E8',
                  opacity: 0.7
                },
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 76
                }
              }),
              _react3.default.createElement(_reactNative.Image, {
                style: {
                  height: height / 2,
                  width: width
                },
                source: _require(_dependencyMap[8], './app_images/schools_background.jpg'),
                blurRadius: 5,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 77
                }
              }),
              _react3.default.createElement(
                _reactNative.View,
                {
                  style: {
                    position: 'absolute',
                    left: 0,
                    right: 0,
                    top: 0,
                    bottom: 0,
                    zIndex: 10,
                    alignItems: 'center',
                    justifyContent: 'center'
                  },
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 78
                  }
                },
                _react3.default.createElement(
                  _reactNative.Text,
                  {
                    style: {
                      fontWeight: 'bold',
                      fontSize: 30,
                      color: 'white'
                    },
                    __source: {
                      fileName: _jsxFileName,
                      lineNumber: 79
                    }
                  },
                  _strings.strings.view_schools_title
                ),
                _react3.default.createElement(
                  _reactNative.Text,
                  {
                    style: {
                      color: 'white',
                      fontSize: 20,
                      textAlign: 'center'
                    },
                    __source: {
                      fileName: _jsxFileName,
                      lineNumber: 80
                    }
                  },
                  _strings.strings.view_schools_subtitle
                )
              )
            )
          ),
          _react3.default.createElement(
            _reactNative.TouchableOpacity,
            {
              onPress: function onPress() {
                return _reactNativeRouterFlux.Actions.GuidelineCategoryScene();
              },
              activeOpacity: 0.6,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 85
              }
            },
            _react3.default.createElement(
              _reactNative.View,
              {
                style: {
                  position: 'relative',
                  height: height / 2,
                  width: width
                },
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 86
                }
              },
              _react3.default.createElement(_reactNative.View, {
                style: {
                  position: 'absolute',
                  zIndex: 9,
                  left: 0,
                  right: 0,
                  top: 0,
                  bottom: 0,
                  backgroundColor: '#22B14C',
                  opacity: 0.7
                },
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 87
                }
              }),
              _react3.default.createElement(_reactNative.Image, {
                style: {
                  height: height / 2,
                  width: width
                },
                source: _require(_dependencyMap[9], './app_images/guidelines_background.jpg'),
                blurRadius: 5,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 88
                }
              }),
              _react3.default.createElement(
                _reactNative.View,
                {
                  style: {
                    position: 'absolute',
                    left: 0,
                    right: 0,
                    top: 0,
                    bottom: 0,
                    zIndex: 10,
                    alignItems: 'center',
                    justifyContent: 'center'
                  },
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 89
                  }
                },
                _react3.default.createElement(
                  _reactNative.Text,
                  {
                    style: {
                      fontWeight: 'bold',
                      fontSize: 30,
                      color: 'white'
                    },
                    __source: {
                      fileName: _jsxFileName,
                      lineNumber: 90
                    }
                  },
                  _strings.strings.view_guidelines_title
                ),
                _react3.default.createElement(
                  _reactNative.Text,
                  {
                    style: {
                      color: 'white',
                      fontSize: 20,
                      textAlign: 'center'
                    },
                    __source: {
                      fileName: _jsxFileName,
                      lineNumber: 91
                    }
                  },
                  _strings.strings.view_guidelines_subtitle
                )
              )
            )
          )
        );
      }
    }]);

    return Select;
  }(_react2.Component));

  exports.default = Select;
});