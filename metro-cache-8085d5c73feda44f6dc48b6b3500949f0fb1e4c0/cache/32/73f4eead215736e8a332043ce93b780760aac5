__d(function (global, _require, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });

    var _react2 = _require(_dependencyMap[0], "react");

    var _react3 = _interopRequireDefault(_react2);

    var _index = _require(_dependencyMap[1], "./../../../react-transform-hmr/lib/index.js");

    var _index2 = _interopRequireDefault(_index);

    var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

    var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

    var _class,
        _temp,
        _jsxFileName = "/home/nishon/ReactNativeProject/buildchange-ph/node_modules/react-native-settings-components/src/picker/picker.js";

    var _reactNative = _require(_dependencyMap[2], "react-native");

    var _propTypes = _require(_dependencyMap[3], "prop-types");

    var _propTypes2 = _interopRequireDefault(_propTypes);

    function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

    function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

    function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

    function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

    var _components = {
        SettingsPicker: {
            displayName: "SettingsPicker"
        }
    };

    var _reactTransformHmrLibIndexJs2 = (0, _index2.default)({
        filename: "/home/nishon/ReactNativeProject/buildchange-ph/node_modules/react-native-settings-components/src/picker/picker.js",
        components: _components,
        locals: [module],
        imports: [_react3.default]
    });

    function _wrapComponent(id) {
        return function (Component) {
            return _reactTransformHmrLibIndexJs2(Component, id);
        };
    }

    var SettingsPicker = _wrapComponent("SettingsPicker")((_temp = _class = function (_Component) {
        _inherits(SettingsPicker, _Component);

        function SettingsPicker() {
            _classCallCheck(this, SettingsPicker);

            var _this = _possibleConstructorReturn(this, (SettingsPicker.__proto__ || Object.getPrototypeOf(SettingsPicker)).call(this));

            _this.state = {
                pickerValue: "",
                pickerOpen: false
            };
            return _this;
        }

        _createClass(SettingsPicker, [{
            key: "componentDidMount",
            value: function componentDidMount() {
                this.setState({
                    pickerValue: this.props.value
                });
            }
        }, {
            key: "componentWillReceiveProps",
            value: function componentWillReceiveProps(props) {
                this.setState({
                    pickerValue: props.value
                });
            }
        }, {
            key: "render",
            value: function render() {
                var _this2 = this;

                var _props = this.props,
                    disabled = _props.disabled,
                    dialogDescription = _props.dialogDescription,
                    negativeButtonTitle = _props.negativeButtonTitle,
                    positiveButtonTitle = _props.positiveButtonTitle,
                    onSaveValue = _props.onSaveValue,
                    containerProps = _props.containerProps,
                    containerStyle = _props.containerStyle,
                    title = _props.title,
                    titleProps = _props.titleProps,
                    titleStyle = _props.titleStyle,
                    valueProps = _props.valueProps,
                    valueStyle = _props.valueStyle,
                    valuePlaceholder = _props.valuePlaceholder,
                    disabledOverlayStyle = _props.disabledOverlayStyle,
                    modalStyle = _props.modalStyle,
                    modalInnerStyle = _props.modalInnerStyle,
                    modalTitleStyle = _props.modalTitleStyle,
                    modalDescriptionStyle = _props.modalDescriptionStyle,
                    modalButtonsTitleStyle = _props.modalButtonsTitleStyle,
                    modalButtonsTitleNegativeStyle = _props.modalButtonsTitleNegativeStyle,
                    modalButtonsTitlePositiveStyle = _props.modalButtonsTitlePositiveStyle,
                    value = _props.value;
                return _react3.default.createElement(
                    _reactNative.View,
                    {
                        style: {
                            width: '100%'
                        },
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 77
                        }
                    },
                    !disabled ? _react3.default.createElement(
                        _reactNative.TouchableOpacity,
                        {
                            onPress: function onPress() {
                                _this2.setState({
                                    pickerOpen: true
                                });
                            },
                            __source: {
                                fileName: _jsxFileName,
                                lineNumber: 78
                            }
                        },
                        _react3.default.createElement(
                            _reactNative.Modal,
                            {
                                visible: this.state.pickerOpen,
                                animationType: "fade",
                                onRequestClose: function onRequestClose() {
                                    _this2.setState({
                                        pickerOpen: false
                                    });
                                },
                                transparent: true,
                                __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 83
                                }
                            },
                            _react3.default.createElement(
                                _reactNative.ScrollView,
                                {
                                    style: [{
                                        flex: 1,
                                        backgroundColor: 'rgba(0,0,0,0.4)'
                                    }, modalStyle],
                                    contentContainerStyle: [{
                                        flex: 1,
                                        justifyContent: 'center',
                                        alignItems: 'center'
                                    }],
                                    bounces: false,
                                    __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 92
                                    }
                                },
                                _react3.default.createElement(
                                    _reactNative.View,
                                    {
                                        style: [{
                                            backgroundColor: 'white',
                                            paddingTop: 20,
                                            paddingBottom: 10,
                                            paddingLeft: 20,
                                            paddingRight: 20,
                                            maxWidth: 300,
                                            minWidth: 300
                                        }, _reactNative.Platform.OS === 'ios' ? {
                                            borderRadius: 16,
                                            shadowRadius: 16,
                                            shadowColor: '#636363',
                                            shadowOpacity: 0.8
                                        } : null, modalInnerStyle],
                                        __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 96
                                        }
                                    },
                                    _react3.default.createElement(
                                        _reactNative.Text,
                                        {
                                            style: [{
                                                fontWeight: '600',
                                                fontSize: 18
                                            }, modalTitleStyle],
                                            __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 100
                                            }
                                        },
                                        title
                                    ),
                                    _react3.default.createElement(
                                        _reactNative.Text,
                                        {
                                            style: [{
                                                marginTop: 10,
                                                fontSize: 15
                                            }, modalDescriptionStyle],
                                            __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 101
                                            }
                                        },
                                        dialogDescription
                                    ),
                                    _react3.default.createElement(
                                        _reactNative.Picker,
                                        {
                                            onValueChange: function onValueChange(itemValue, itemIndex) {
                                                _this2.setState({
                                                    pickerValue: itemValue
                                                });
                                            },
                                            selectedValue: this.state.pickerValue,
                                            __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 102
                                            }
                                        },
                                        this.props.possibleValues.map(function (item, index, array) {
                                            return _react3.default.createElement(_reactNative.Picker.Item, {
                                                key: index,
                                                label: item.label,
                                                value: item.value,
                                                __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 110
                                                }
                                            });
                                        }, this)
                                    ),
                                    _react3.default.createElement(
                                        _reactNative.View,
                                        {
                                            style: {
                                                justifyContent: 'center',
                                                flex: 0,
                                                flexDirection: 'row'
                                            },
                                            __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 113
                                            }
                                        },
                                        _react3.default.createElement(
                                            _reactNative.TouchableOpacity,
                                            {
                                                style: {
                                                    margin: 5,
                                                    flex: 1
                                                },
                                                onPress: function onPress() {
                                                    _this2.setState({
                                                        pickerOpen: false
                                                    });
                                                },
                                                __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 114
                                                }
                                            },
                                            _react3.default.createElement(
                                                _reactNative.View,
                                                {
                                                    __source: {
                                                        fileName: _jsxFileName,
                                                        lineNumber: 119
                                                    }
                                                },
                                                _react3.default.createElement(
                                                    _reactNative.Text,
                                                    {
                                                        style: [{
                                                            padding: 10,
                                                            color: 'red'
                                                        }, _reactNative.Platform.OS === 'ios' ? {
                                                            fontSize: 18,
                                                            fontWeight: '600'
                                                        } : null, modalButtonsTitleStyle, modalButtonsTitleNegativeStyle],
                                                        __source: {
                                                            fileName: _jsxFileName,
                                                            lineNumber: 120
                                                        }
                                                    },
                                                    _reactNative.Platform.OS === 'android' ? negativeButtonTitle.toUpperCase() : negativeButtonTitle
                                                )
                                            )
                                        ),
                                        _react3.default.createElement(
                                            _reactNative.TouchableOpacity,
                                            {
                                                style: {
                                                    margin: 5,
                                                    flex: 1
                                                },
                                                onPress: function onPress() {
                                                    _this2.setState({
                                                        pickerOpen: false
                                                    });

                                                    onSaveValue(_this2.state.pickerValue);
                                                },
                                                __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 127
                                                }
                                            },
                                            _react3.default.createElement(
                                                _reactNative.View,
                                                {
                                                    __source: {
                                                        fileName: _jsxFileName,
                                                        lineNumber: 133
                                                    }
                                                },
                                                _react3.default.createElement(
                                                    _reactNative.Text,
                                                    {
                                                        style: [{
                                                            padding: 10,
                                                            color: 'red',
                                                            textAlign: 'center'
                                                        }, _reactNative.Platform.OS === 'ios' ? {
                                                            fontSize: 18,
                                                            fontWeight: '400'
                                                        } : null, modalButtonsTitleStyle, modalButtonsTitlePositiveStyle],
                                                        __source: {
                                                            fileName: _jsxFileName,
                                                            lineNumber: 134
                                                        }
                                                    },
                                                    _reactNative.Platform.OS === 'android' ? positiveButtonTitle.toUpperCase() : positiveButtonTitle
                                                )
                                            )
                                        )
                                    )
                                )
                            )
                        ),
                        _react3.default.createElement(
                            _reactNative.View,
                            _extends({}, containerProps, {
                                style: [styles.defaultContainerStyle, containerStyle],
                                __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 145
                                }
                            }),
                            _react3.default.createElement(
                                _reactNative.Text,
                                _extends({}, titleProps, {
                                    style: [styles.defaultTitleStyle, titleStyle],
                                    __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 146
                                    }
                                }),
                                this.props.title
                            ),
                            _react3.default.createElement(
                                _reactNative.Text,
                                _extends({}, valueProps, {
                                    style: [styles.defaultValueStyle, valueStyle],
                                    __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 149
                                    }
                                }),
                                value ? value : valuePlaceholder
                            )
                        )
                    ) : _react3.default.createElement(
                        _reactNative.View,
                        _extends({}, containerProps, {
                            style: [styles.defaultContainerStyle, containerStyle],
                            __source: {
                                fileName: _jsxFileName,
                                lineNumber: 153
                            }
                        }),
                        _react3.default.createElement(
                            _reactNative.Text,
                            _extends({}, titleProps, {
                                style: [styles.defaultTitleStyle, titleStyle],
                                __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 154
                                }
                            }),
                            title
                        ),
                        _react3.default.createElement(
                            _reactNative.Text,
                            _extends({}, valueProps, {
                                style: [styles.defaultValueStyle, valueStyle],
                                __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 155
                                }
                            }),
                            value ? value : valuePlaceholder
                        ),
                        _react3.default.createElement(_reactNative.View, {
                            style: [{
                                position: "absolute",
                                top: 0,
                                right: 0,
                                bottom: 0,
                                left: 0
                            }, styles.defaultDisabledOverlayStyle, disabledOverlayStyle],
                            __source: {
                                fileName: _jsxFileName,
                                lineNumber: 156
                            }
                        })
                    )
                );
            }
        }]);

        return SettingsPicker;
    }(_react2.Component), _class.props = {
        containerProps: _propTypes2.default.object,
        containerStyle: _reactNative.ViewPropTypes ? _reactNative.ViewPropTypes.style : _reactNative.View.propTypes.style,
        disabledOverlayStyle: _reactNative.ViewPropTypes ? _reactNative.ViewPropTypes.style : _reactNative.View.propTypes.style,
        titleProps: _propTypes2.default.object,
        titleStyle: _reactNative.Text.propTypes.style,
        modalTitleStyle: _reactNative.Text.propTypes.style,
        title: _propTypes2.default.string.isRequired,
        valueProps: _propTypes2.default.object,
        valueStyle: _reactNative.Text.propTypes.style,
        value: _propTypes2.default.string.isRequired,
        possibleValues: _propTypes2.default.array.isRequired,
        valuePlaceholder: _propTypes2.default.string,
        negativeButtonTitle: _propTypes2.default.string.isRequired,
        positiveButtonTitle: _propTypes2.default.string.isRequired,
        dialogDescription: _propTypes2.default.string,
        modalDescriptionStyle: _reactNative.Text.propTypes.style,
        onSaveValue: _propTypes2.default.func.isRequired,
        disabled: _propTypes2.default.bool,
        modalStyle: _reactNative.ViewPropTypes ? _reactNative.ViewPropTypes.style : _reactNative.View.propTypes.style,
        modalInnerStyle: _reactNative.ViewPropTypes ? _reactNative.ViewPropTypes.style : _reactNative.View.propTypes.style,
        modalButtonsTitleStyle: _reactNative.Text.propTypes.style,
        modalButtonsTitleNegativeStyle: _reactNative.Text.propTypes.style,
        modalButtonsTitlePositiveStyle: _reactNative.Text.propTypes.style
    }, _class.defaultProps = {
        containerProps: {},
        containerStyle: {},
        disabledOverlayStyle: {},
        titleProps: {},
        titleStyle: {},
        modalTitleStyle: {},
        modalDescriptionStyle: {},
        valueProps: {},
        valuePlaceholder: '...',
        valueStyle: {},
        disabled: false
    }, _temp));

    var styles = _reactNative.StyleSheet.create({
        defaultContainerStyle: {
            padding: 0,
            height: 50,
            backgroundColor: "white",
            alignItems: "center",
            flexDirection: "row"
        },
        defaultTitleStyle: {
            flex: 1,
            paddingLeft: 16,
            paddingRight: 8,
            fontSize: 16
        },
        defaultValueStyle: {
            color: "rgb(160,160,160)",
            fontSize: 14,
            flex: 0,
            paddingLeft: 8,
            paddingRight: 16
        },
        defaultDisabledOverlayStyle: {
            backgroundColor: "rgba(255,255,255,0.6)"
        }
    });

    exports.default = SettingsPicker;
});