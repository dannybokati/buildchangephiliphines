__d(function (global, _require, module, exports, _dependencyMap) {
	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _react2 = _require(_dependencyMap[0], "react");

	var _react3 = _interopRequireDefault(_react2);

	var _index = _require(_dependencyMap[1], "./../node_modules/react-transform-hmr/lib/index.js");

	var _index2 = _interopRequireDefault(_index);

	var _jsxFileName = "/home/nishon/ReactNativeProject/buildchange-ph/src/Login.js";

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _reactNative = _require(_dependencyMap[2], "react-native");

	var _reactNativeRouterFlux = _require(_dependencyMap[3], "react-native-router-flux");

	var _reactRedux = _require(_dependencyMap[4], "react-redux");

	var _actions = _require(_dependencyMap[5], "./actions");

	var _styles = _require(_dependencyMap[6], "./styles");

	var _styles2 = _interopRequireDefault(_styles);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _components = {
		Login: {
			displayName: "Login"
		}
	};

	var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
		filename: "/home/nishon/ReactNativeProject/buildchange-ph/src/Login.js",
		components: _components,
		locals: [module],
		imports: [_react3.default]
	});

	function _wrapComponent(id) {
		return function (Component) {
			return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
		};
	}

	var Login = _wrapComponent("Login")(function (_Component) {
		_inherits(Login, _Component);

		function Login() {
			_classCallCheck(this, Login);

			var _this = _possibleConstructorReturn(this, (Login.__proto__ || Object.getPrototypeOf(Login)).call(this));

			_this.state = {
				username: null,
				password: null
			};
			return _this;
		}

		_createClass(Login, [{
			key: "onValueChange",
			value: function onValueChange(item, selectedValue) {
				return regeneratorRuntime.async(function onValueChange$(_context) {
					while (1) {
						switch (_context.prev = _context.next) {
							case 0:
								_context.prev = 0;
								_context.next = 3;
								return regeneratorRuntime.awrap(_reactNative.AsyncStorage.setItem(item, selectedValue));

							case 3:
								_context.next = 8;
								break;

							case 5:
								_context.prev = 5;
								_context.t0 = _context["catch"](0);
								console.log(_context.t0.message);

							case 8:
							case "end":
								return _context.stop();
						}
					}
				}, null, this, [[0, 5]]);
			}
		}, {
			key: "onUserIdChange",
			value: function onUserIdChange(item, selectedValue) {
				return regeneratorRuntime.async(function onUserIdChange$(_context2) {
					while (1) {
						switch (_context2.prev = _context2.next) {
							case 0:
								_context2.prev = 0;
								_context2.next = 3;
								return regeneratorRuntime.awrap(_reactNative.AsyncStorage.setItem(item, selectedValue));

							case 3:
								_context2.next = 8;
								break;

							case 5:
								_context2.prev = 5;
								_context2.t0 = _context2["catch"](0);
								console.log(_context2.t0.message);

							case 8:
							case "end":
								return _context2.stop();
						}
					}
				}, null, this, [[0, 5]]);
			}
		}, {
			key: "userLogin",
			value: function userLogin() {
				var _this2 = this;

				if (this.state.username && this.state.password) {
					var formdata = new FormData();
					formdata.append('username', this.state.username);
					formdata.append('password', this.state.password);
					var req = {
						method: 'POST',
						headers: {
							'Content-Type': 'multipart/form-data'
						},
						body: formdata
					};
					fetch('http://bccms.naxa.com.np/core/api/api-token-auth/', req).then(function (response) {
						if (response.ok) {
							return response;
						}

						_reactNative.Alert.alert('Failed to login');

						var error = new Error(response.statusText);
						error.response = response;
						throw error;
					}).then(function (response) {
						return response.json();
					}).then(function (responseData) {
						_this2.onValueChange('token', responseData.token);

						_this2.onUserIdChange('user_id', responseData.user_id.toString());

						var dispatch = _this2.props.dispatch;
						dispatch((0, _actions.storeUserGroup)({
							userGroup: responseData.group,
							userId: responseData.user_id
						}));

						_reactNativeRouterFlux.Actions.Successful_Login({
							type: 'replace'
						});
					}).catch(function (error) {
						return console.log(error);
					}).done();
				}
			}
		}, {
			key: "render",
			value: function render() {
				var _this3 = this;

				return _react3.default.createElement(
					_reactNative.View,
					{
						style: _styles2.default.container,
						__source: {
							fileName: _jsxFileName,
							lineNumber: 251
						}
					},
					_react3.default.createElement(_reactNative.Image, {
						source: _require(_dependencyMap[7], '../app_images/buildchange.jpeg'),
						style: _styles2.default.image,
						__source: {
							fileName: _jsxFileName,
							lineNumber: 252
						}
					}),
					_react3.default.createElement(
						_reactNative.View,
						{
							style: _styles2.default.form,
							__source: {
								fileName: _jsxFileName,
								lineNumber: 256
							}
						},
						_react3.default.createElement(_reactNative.TextInput, {
							editable: true,
							onChangeText: function onChangeText(username) {
								return _this3.setState({
									username: username
								});
							},
							placeholder: "Username",
							ref: "username",
							returnKeyType: "next",
							style: _styles2.default.inputText,
							value: this.state.username,
							autoCapitalize: "none",
							autoFocus: true,
							__source: {
								fileName: _jsxFileName,
								lineNumber: 257
							}
						}),
						_react3.default.createElement(_reactNative.TextInput, {
							editable: true,
							onChangeText: function onChangeText(password) {
								return _this3.setState({
									password: password
								});
							},
							placeholder: "Password",
							ref: "password",
							returnKeyType: "next",
							secureTextEntry: true,
							style: _styles2.default.inputText,
							value: this.state.password,
							autoCapitalize: "none",
							__source: {
								fileName: _jsxFileName,
								lineNumber: 268
							}
						}),
						_react3.default.createElement(
							_reactNative.TouchableOpacity,
							{
								style: _styles2.default.buttonWrapper,
								onPress: this.userLogin.bind(this),
								__source: {
									fileName: _jsxFileName,
									lineNumber: 279
								}
							},
							_react3.default.createElement(
								_reactNative.Text,
								{
									style: _styles2.default.buttonText,
									__source: {
										fileName: _jsxFileName,
										lineNumber: 283
									}
								},
								"Login"
							)
						)
					)
				);
			}
		}]);

		return Login;
	}(_react2.Component));

	var mapStateToProps = function mapStateToProps(state) {
		console.log('login_mapstatetoprops_bhitra');
		console.log(state);
		return {};
	};

	exports.default = (0, _reactRedux.connect)(mapStateToProps)(Login);
});